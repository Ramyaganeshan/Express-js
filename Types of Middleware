Using middleware:

Express is a routing and middleware web framework that has minimal
functionality of its own: An Express application is essentially a series of middleware function calls.

An Express application can use the following types of middleware:
Application-level middleware
Router-level middleware
Error-handling middleware
Built-in middleware
Third-party middleware

You can load application-level and router-level middleware with an optional mount path.
You can also load a series of middleware functions together,
which creates a sub-stack of the middleware system at a mount point.



1.Application-level middleware:-
Bind application-level middleware to an instance of the app object by using the app.use() and 
app.METHOD() functions, where METHOD is the HTTP method of the request that the middleware function 
handles (such as GET, PUT, or POST) in lowercase.


This example shows a middleware function with no mount path:
The function is executed every time the app receives a request.

const express = require('express')
const app = express()

app.use((req, res, next) => {
  console.log('Time:', Date.now())
  next()
})




