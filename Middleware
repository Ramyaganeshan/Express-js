
Middleware functions as the name suggests can be used to make changes in the request/response
lifecycle of the express.
Middleware functions execute before sending the response back to the user.
You can use multiple middleware functions chained together and they execute in order.

There are five types of middleware functions in the express.
Application middleware
Router middleware
Error-handling middleware
Built-in middleware
Third-party middleware



Writing middleware for use in Express apps:-

Middleware functions are functions that have access to the request object (req),
the response object (res), and the next function in the applicationâ€™s request-response cycle.
The next function is a function in the Express router which, when invoked, executes the middleware 
succeeding the current middleware.

Middleware functions can perform the following tasks:
Execute any code.
Make changes to the request and the response objects.
End the request-response cycle.
Call the next middleware in the stack.

If the current middleware function does not end the request-response cycle, 
it must call next() to pass control to the next middleware function. Otherwise, the request will be left hanging.


The following figure shows the elements of a middleware function call:
HTTP method for which the middleware function applies.
Path (route) for which the middleware function applies.
The middleware function.
Callback argument to the middleware function, called "next" by convention.
HTTP response argument to the middleware function, called "res" by convention.
HTTP request argument to the middleware function, called "req" by convention.

Starting with Express 5, middleware functions that return a Promise will call next(value) 
when they reject or throw an error. next will be called with either the rejected value or the thrown Error.
